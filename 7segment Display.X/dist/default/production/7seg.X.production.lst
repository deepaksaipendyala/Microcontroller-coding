

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Sep 01 11:29:42 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.36
    15                           ; Generated 28/01/2022 GMT
    16                           ; 
    17                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169                           
   170                           	psect	idataBANK0
   171  077C                     __pidataBANK0:
   172                           
   173                           ;initializer for main@F881
   174  077C  343F               	retlw	63
   175  077D  3406               	retlw	6
   176  077E  345B               	retlw	91
   177  077F  344F               	retlw	79
   178  0780  3466               	retlw	102
   179  0781  346D               	retlw	109
   180  0782  347D               	retlw	125
   181  0783  3407               	retlw	7
   182  0784  347F               	retlw	127
   183  0785  346F               	retlw	111
   184  0008                     _PORTD	set	8
   185  0088                     _TRISD	set	136
   186                           
   187                           	psect	cinit
   188  07EE                     start_initialization:	
   189                           ; #config settings
   190                           
   191  07EE                     __initialization:
   192                           
   193                           ; Initialize objects allocated to BANK0
   194  07EE  1383               	bcf	3,7	;select IRP bank0
   195  07EF  3036               	movlw	low (__pdataBANK0+10)
   196  07F0  00FD               	movwf	btemp+-1
   197  07F1  3007               	movlw	high __pidataBANK0
   198  07F2  00FE               	movwf	btemp
   199  07F3  307C               	movlw	low __pidataBANK0
   200  07F4  00FF               	movwf	btemp+1
   201  07F5  302C               	movlw	low __pdataBANK0
   202  07F6  0084               	movwf	4
   203  07F7  120A  118A  2799  120A  118A  	fcall	init_ram0
   204  07FC                     end_of_initialization:	
   205                           ;End of C runtime variable initialization code
   206                           
   207  07FC                     __end_of__initialization:
   208  07FC  0183               	clrf	3
   209  07FD  120A  118A  2FA8   	ljmp	_main	;jump to C main() function
   210                           
   211                           	psect	dataBANK0
   212  002C                     __pdataBANK0:
   213  002C                     main@F881:
   214  002C                     	ds	10
   215                           
   216                           	psect	inittext
   217  0795                     init_fetch0:	
   218                           ;	Called with low address in FSR and high address in W
   219                           
   220  0795  087E               	movf	btemp,w
   221  0796  008A               	movwf	10
   222  0797  087F               	movf	btemp+1,w
   223  0798  0082               	movwf	2
   224  0799                     init_ram0:	
   225                           ;Called with:
   226                           ;	high address of idata address in btemp 
   227                           ;	low address of idata address in btemp+1 
   228                           ;	low address of data in FSR
   229                           ;	high address + 1 of data in btemp-1
   230                           
   231  0799  120A  118A  2795  120A  118A  	fcall	init_fetch0
   232  079E  0080               	movwf	0
   233  079F  0A84               	incf	4,f
   234  07A0  0804               	movf	4,w
   235  07A1  067D               	xorwf	btemp+-1,w
   236  07A2  1903               	btfsc	3,2
   237  07A3  3400               	retlw	0
   238  07A4  0AFF               	incf	btemp+1,f
   239  07A5  1903               	btfsc	3,2
   240  07A6  0AFE               	incf	btemp,f
   241  07A7  2F99               	goto	init_ram0
   242                           
   243                           	psect	cstackCOMMON
   244  0070                     __pcstackCOMMON:
   245  0070                     ?_delay:
   246  0070                     ?_main:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     delay@Count:	
   250                           ; 2 bytes @ 0x0
   251                           
   252                           
   253                           ; 2 bytes @ 0x0
   254  0070                     	ds	2
   255  0072                     ??_delay:
   256  0072                     ??_main:	
   257                           ; 1 bytes @ 0x2
   258                           
   259                           
   260                           ; 1 bytes @ 0x2
   261  0072                     	ds	4
   262                           
   263                           	psect	cstackBANK0
   264  0020                     __pcstackBANK0:
   265  0020                     main@seg_code:
   266                           
   267                           ; 10 bytes @ 0x0
   268  0020                     	ds	10
   269  002A                     main@i:
   270                           
   271                           ; 2 bytes @ 0xA
   272  002A                     	ds	2
   273                           
   274                           	psect	maintext
   275  07A8                     __pmaintext:	
   276 ;;
   277 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   278 ;;
   279 ;; *************** function _main *****************
   280 ;; Defined at:
   281 ;;		line 13 in file "newfile.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;  i               2   10[BANK0 ] int 
   286 ;;  seg_code       10    0[BANK0 ] unsigned char [10]
   287 ;; Return value:  Size  Location     Type
   288 ;;                  2   14[None  ] int 
   289 ;; Registers used:
   290 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   291 ;; Tracked objects:
   292 ;;		On entry : B00/0
   293 ;;		On exit  : 0/0
   294 ;;		Unchanged: 0/0
   295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   296 ;;      Params:         0       0       0       0       0
   297 ;;      Locals:         0      12       0       0       0
   298 ;;      Temps:          4       0       0       0       0
   299 ;;      Totals:         4      12       0       0       0
   300 ;;Total ram usage:       16 bytes
   301 ;; Hardware stack levels required when called: 1
   302 ;; This function calls:
   303 ;;		_delay
   304 ;; This function is called by:
   305 ;;		Startup code after reset
   306 ;; This function uses a non-reentrant model
   307 ;;
   308                           
   309  07A8                     _main:	
   310                           ;psect for function _main
   311                           
   312  07A8                     l640:	
   313                           ;incstack = 0
   314                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   315                           
   316                           
   317                           ;newfile.c: 15:     char seg_code[10]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f
      +                          };
   318  07A8  3020               	movlw	main@seg_code& (0+255)
   319  07A9  0084               	movwf	4
   320  07AA  302C               	movlw	low main@F881
   321  07AB  00F2               	movwf	??_main
   322  07AC  0804               	movf	4,w
   323  07AD  00F3               	movwf	??_main+1
   324  07AE  300A               	movlw	10
   325  07AF  00F4               	movwf	??_main+2
   326  07B0                     u50:
   327  07B0  0872               	movf	??_main,w
   328  07B1  0084               	movwf	4
   329  07B2  1383               	bcf	3,7	;select IRP bank0
   330  07B3  0800               	movf	0,w
   331  07B4  00F5               	movwf	??_main+3
   332  07B5  0AF2               	incf	??_main,f
   333  07B6  0873               	movf	??_main+1,w
   334  07B7  0084               	movwf	4
   335  07B8  0875               	movf	??_main+3,w
   336  07B9  0080               	movwf	0
   337  07BA  0AF3               	incf	??_main+1,f
   338  07BB  0BF4               	decfsz	??_main+2,f
   339  07BC  2FB0               	goto	u50
   340  07BD                     l642:
   341                           
   342                           ;newfile.c: 17:     TRISD = 0x00;
   343  07BD  1683               	bsf	3,5	;RP0=1, select bank1
   344  07BE  1303               	bcf	3,6	;RP1=0, select bank1
   345  07BF  0188               	clrf	8	;volatile
   346  07C0                     l644:
   347                           
   348                           ;newfile.c: 22:     {;newfile.c: 24:         for (int i = 0; i <= 9; i++)
   349  07C0  1283               	bcf	3,5	;RP0=0, select bank0
   350  07C1  1303               	bcf	3,6	;RP1=0, select bank0
   351  07C2  01AA               	clrf	main@i
   352  07C3  01AB               	clrf	main@i+1
   353  07C4                     l650:
   354                           
   355                           ;newfile.c: 26:         {;newfile.c: 28:             PORTD = seg_code[i];
   356  07C4  1283               	bcf	3,5	;RP0=0, select bank0
   357  07C5  1303               	bcf	3,6	;RP1=0, select bank0
   358  07C6  082A               	movf	main@i,w
   359  07C7  3E20               	addlw	(low (main@seg_code| 0))& (0+255)
   360  07C8  0084               	movwf	4
   361  07C9  1383               	bcf	3,7	;select IRP bank0
   362  07CA  0800               	movf	0,w
   363  07CB  0088               	movwf	8	;volatile
   364  07CC                     l652:
   365                           
   366                           ;newfile.c: 30:             delay(10000);
   367  07CC  3010               	movlw	16
   368  07CD  00F0               	movwf	delay@Count
   369  07CE  3027               	movlw	39
   370  07CF  00F1               	movwf	delay@Count+1
   371  07D0  120A  118A  2786  120A  118A  	fcall	_delay
   372  07D5                     l654:
   373                           
   374                           ;newfile.c: 32:         }
   375  07D5  3001               	movlw	1
   376  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   377  07D7  1303               	bcf	3,6	;RP1=0, select bank0
   378  07D8  07AA               	addwf	main@i,f
   379  07D9  1803               	skipnc
   380  07DA  0AAB               	incf	main@i+1,f
   381  07DB  3000               	movlw	0
   382  07DC  07AB               	addwf	main@i+1,f
   383  07DD                     l656:
   384  07DD  082B               	movf	main@i+1,w
   385  07DE  3A80               	xorlw	128
   386  07DF  00FF               	movwf	btemp+1
   387  07E0  3080               	movlw	128
   388  07E1  027F               	subwf	btemp+1,w
   389  07E2  1D03               	skipz
   390  07E3  2FE6               	goto	u65
   391  07E4  300A               	movlw	10
   392  07E5  022A               	subwf	main@i,w
   393  07E6                     u65:
   394  07E6  1C03               	skipc
   395  07E7  2FE9               	goto	u61
   396  07E8  2FEA               	goto	u60
   397  07E9                     u61:
   398  07E9  2FC4               	goto	l650
   399  07EA                     u60:
   400  07EA  2FC0               	goto	l644
   401  07EB  120A  118A  2800   	ljmp	start
   402  07EE                     __end_of_main:
   403                           
   404                           	psect	text1
   405  0786                     __ptext1:	
   406 ;; *************** function _delay *****************
   407 ;; Defined at:
   408 ;;		line 5 in file "newfile.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;  Count           2    0[COMMON] int 
   411 ;; Auto vars:     Size  Location     Type
   412 ;;		None
   413 ;; Return value:  Size  Location     Type
   414 ;;                  1    wreg      void 
   415 ;; Registers used:
   416 ;;		wreg, status,2, status,0
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   422 ;;      Params:         2       0       0       0       0
   423 ;;      Locals:         0       0       0       0       0
   424 ;;      Temps:          0       0       0       0       0
   425 ;;      Totals:         2       0       0       0       0
   426 ;;Total ram usage:        2 bytes
   427 ;; Hardware stack levels used: 1
   428 ;; This function calls:
   429 ;;		Nothing
   430 ;; This function is called by:
   431 ;;		_main
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435  0786                     _delay:	
   436                           ;psect for function _delay
   437                           
   438  0786                     l636:	
   439                           ;incstack = 0
   440                           ; Regs used in _delay: [wreg+status,2+status,0]
   441                           
   442  0786                     l638:	
   443                           ;newfile.c: 5: void delay(int Count);newfile.c: 7: {;newfile.c: 9:     while(Count--);
   444                           
   445  0786  30FF               	movlw	255
   446  0787  07F0               	addwf	delay@Count,f
   447  0788  1803               	skipnc
   448  0789  0AF1               	incf	delay@Count+1,f
   449  078A  30FF               	movlw	255
   450  078B  07F1               	addwf	delay@Count+1,f
   451  078C  0A70               	incf	delay@Count,w
   452  078D  1D03               	skipz
   453  078E  2F93               	goto	u41
   454  078F  0A71               	incf	delay@Count+1,w
   455  0790  1D03               	btfss	3,2
   456  0791  2F93               	goto	u41
   457  0792  2F94               	goto	u40
   458  0793                     u41:
   459  0793  2F86               	goto	l638
   460  0794                     u40:
   461  0794                     l10:
   462  0794  0008               	return
   463  0795                     __end_of_delay:
   464  007E                     btemp	set	126	;btemp
   465  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80     12      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0     190
                                              2 COMMON     4     4      0
                                              0 BANK0     12    12      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      C      16       5       27.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       6       1       42.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1C      12        0.0%
ABS                  0      0      1C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Sep 01 11:29:42 2022

                      pc 0002                       l10 0794                       u40 0794  
                     u41 0793                       u50 07B0                       u60 07EA  
                     u61 07E9                       u65 07E6                       fsr 0004  
                    l640 07A8                      l650 07C4                      l642 07BD  
                    l636 0786                      l652 07CC                      l644 07C0  
                    l638 0786                      l654 07D5                      l656 07DD  
                    fsr0 0004                      indf 0000                     _main 07A8  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTD 0008                    _TRISD 0088             main@seg_code 0020  
                  _delay 0786                    main@i 002A                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 07EE                   ??_main 0072                   ?_delay 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 077C  
          __end_of_delay 0795                  ??_delay 0072               __pmaintext 07A8  
                __ptext1 0786               delay@Count 0070     end_of_initialization 07FC  
    start_initialization 07EE               init_fetch0 0795              __pdataBANK0 002C  
              ___latbits 0002            __pcstackBANK0 0020                 main@F881 002C  
               init_ram0 0799  
