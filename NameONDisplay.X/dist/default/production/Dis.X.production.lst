

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Jul 21 16:04:58 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.36
    16                           ; Generated 28/01/2022 GMT
    17                           ; 
    18                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0088                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0008                     _PORTDbits	set	8
   171  0007                     _PORTC	set	7
   172  0088                     _TRISD	set	136
   173  0087                     _TRISC	set	135
   174                           
   175                           	psect	strings
   176  0003                     __pstrings:
   177  0003                     stringtab:
   178  0003                     __stringtab:
   179  0003                     stringcode:	
   180                           ;	String table - string pointers are 1 byte each
   181                           
   182  0003                     stringdir:
   183  0003  3000               	movlw	high stringdir
   184  0004  008A               	movwf	10
   185  0005  0804               	movf	4,w
   186  0006  0A84               	incf	4,f
   187  0007  0782               	addwf	2,f
   188  0008                     __stringbase:
   189  0008  3400               	retlw	0
   190  0009                     __end_of__stringtab:
   191  0009                     STR_1:
   192  0009  3444               	retlw	68	;'D'
   193  000A  3465               	retlw	101	;'e'
   194  000B  3465               	retlw	101	;'e'
   195  000C  3470               	retlw	112	;'p'
   196  000D  3461               	retlw	97	;'a'
   197  000E  346B               	retlw	107	;'k'
   198  000F  3420               	retlw	32	;' '
   199  0010  3453               	retlw	83	;'S'
   200  0011  3461               	retlw	97	;'a'
   201  0012  3469               	retlw	105	;'i'
   202  0013  3400               	retlw	0
   203  0014                     STR_2:
   204  0014  3450               	retlw	80	;'P'
   205  0015  3465               	retlw	101	;'e'
   206  0016  346E               	retlw	110	;'n'
   207  0017  3464               	retlw	100	;'d'
   208  0018  3479               	retlw	121	;'y'
   209  0019  3461               	retlw	97	;'a'
   210  001A  346C               	retlw	108	;'l'
   211  001B  3461               	retlw	97	;'a'
   212  001C  3400               	retlw	0
   213                           
   214                           	psect	cinit
   215  07FC                     start_initialization:	
   216                           ; #config settings
   217                           
   218  07FC                     __initialization:
   219  07FC                     end_of_initialization:	
   220                           ;End of C runtime variable initialization code
   221                           
   222  07FC                     __end_of__initialization:
   223  07FC  0183               	clrf	3
   224  07FD  120A  118A  2FCF   	ljmp	_main	;jump to C main() function
   225                           
   226                           	psect	cstackCOMMON
   227  0070                     __pcstackCOMMON:
   228  0070                     ?_store:
   229  0070                     ??_store:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0070                     ?_instruct:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0070                     ??_instruct:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ?_init:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ?_main:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     store@data:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     instruct@inst:	
   248                           ; 1 bytes @ 0x0
   249                           
   250                           
   251                           ; 1 bytes @ 0x0
   252  0070                     	ds	1
   253  0071                     ?_string:
   254  0071                     ??_init:	
   255                           ; 1 bytes @ 0x1
   256                           
   257  0071                     string@n:	
   258                           ; 1 bytes @ 0x1
   259                           
   260                           
   261                           ; 1 bytes @ 0x1
   262  0071                     	ds	1
   263  0072                     ??_string:
   264                           
   265                           ; 1 bytes @ 0x2
   266  0072                     	ds	1
   267  0073                     string@str:
   268                           
   269                           ; 1 bytes @ 0x3
   270  0073                     	ds	1
   271  0074                     string@i:
   272                           
   273                           ; 1 bytes @ 0x4
   274  0074                     	ds	1
   275  0075                     ??_main:
   276                           
   277                           ; 1 bytes @ 0x5
   278  0075                     	ds	1
   279                           
   280                           	psect	maintext
   281  07CF                     __pmaintext:	
   282 ;;
   283 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   284 ;;
   285 ;; *************** function _main *****************
   286 ;; Defined at:
   287 ;;		line 48 in file "cod.c"
   288 ;; Parameters:    Size  Location     Type
   289 ;;		None
   290 ;; Auto vars:     Size  Location     Type
   291 ;;		None
   292 ;; Return value:  Size  Location     Type
   293 ;;                  1    wreg      void 
   294 ;; Registers used:
   295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   296 ;; Tracked objects:
   297 ;;		On entry : B00/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   301 ;;      Params:         0       0       0       0       0
   302 ;;      Locals:         0       0       0       0       0
   303 ;;      Temps:          1       0       0       0       0
   304 ;;      Totals:         1       0       0       0       0
   305 ;;Total ram usage:        1 bytes
   306 ;; Hardware stack levels required when called: 2
   307 ;; This function calls:
   308 ;;		_init
   309 ;;		_instruct
   310 ;;		_string
   311 ;; This function is called by:
   312 ;;		Startup code after reset
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316  07CF                     _main:	
   317                           ;psect for function _main
   318                           
   319  07CF                     l673:	
   320                           ;incstack = 0
   321                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   322                           
   323  07CF  1683               	bsf	3,5	;RP0=1, select bank1
   324  07D0  1303               	bcf	3,6	;RP1=0, select bank1
   325  07D1  0187               	clrf	7	;volatile
   326  07D2  0188               	clrf	8	;volatile
   327  07D3                     l675:
   328  07D3  120A  118A  279B  120A  118A  	fcall	_init
   329  07D8                     l677:
   330  07D8  3080               	movlw	128
   331  07D9  120A  118A  2787  120A  118A  	fcall	_instruct
   332  07DE                     l679:
   333  07DE  300A               	movlw	10
   334  07DF  00F5               	movwf	??_main
   335  07E0  0875               	movf	??_main,w
   336  07E1  00F1               	movwf	string@n
   337  07E2  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   338  07E3  120A  118A  27B4  120A  118A  	fcall	_string
   339  07E8                     l681:
   340  07E8  30C0               	movlw	192
   341  07E9  120A  118A  2787  120A  118A  	fcall	_instruct
   342  07EE                     l683:
   343  07EE  3008               	movlw	8
   344  07EF  00F5               	movwf	??_main
   345  07F0  0875               	movf	??_main,w
   346  07F1  00F1               	movwf	string@n
   347  07F2  300C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   348  07F3  120A  118A  27B4  120A  118A  	fcall	_string
   349  07F8  2FD8               	goto	l677
   350  07F9  120A  118A  2800   	ljmp	start
   351  07FC                     __end_of_main:
   352                           
   353                           	psect	text1
   354  07B4                     __ptext1:	
   355 ;; *************** function _string *****************
   356 ;; Defined at:
   357 ;;		line 31 in file "cod.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;  str             1    wreg     PTR unsigned char 
   360 ;;		 -> STR_2(9), STR_1(11), 
   361 ;;  n               1    1[COMMON] unsigned char 
   362 ;; Auto vars:     Size  Location     Type
   363 ;;  str             1    3[COMMON] PTR unsigned char 
   364 ;;		 -> STR_2(9), STR_1(11), 
   365 ;;  i               1    4[COMMON] unsigned char 
   366 ;; Return value:  Size  Location     Type
   367 ;;                  1    wreg      void 
   368 ;; Registers used:
   369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   375 ;;      Params:         1       0       0       0       0
   376 ;;      Locals:         2       0       0       0       0
   377 ;;      Temps:          1       0       0       0       0
   378 ;;      Totals:         4       0       0       0       0
   379 ;;Total ram usage:        4 bytes
   380 ;; Hardware stack levels used: 1
   381 ;; Hardware stack levels required when called: 1
   382 ;; This function calls:
   383 ;;		_store
   384 ;; This function is called by:
   385 ;;		_main
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389  07B4                     _string:	
   390                           ;psect for function _string
   391                           
   392                           
   393                           ;incstack = 0
   394                           ; Regs used in _string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   395                           ;string@str stored from wreg
   396  07B4  00F3               	movwf	string@str
   397  07B5                     l665:
   398                           
   399                           ;cod.c: 31:     instruct(0x38);;cod.c: 32:     instruct(0x06);;cod.c: 33:     instruct(0
      +                          x0C);;cod.c: 36: void main(void)
   400  07B5  01F4               	clrf	string@i
   401  07B6  2FC8               	goto	l671
   402  07B7                     l667:
   403                           
   404                           ;cod.c: 37: {;cod.c: 38:     TRISC=0x00;
   405  07B7  0874               	movf	string@i,w
   406  07B8  0773               	addwf	string@str,w
   407  07B9  0084               	movwf	4
   408  07BA  120A  118A  2003  120A  118A  	fcall	stringdir
   409  07BF  120A  118A  2791  120A  118A  	fcall	_store
   410  07C4                     l669:
   411                           
   412                           ;cod.c: 39:     TRISD=0x00;
   413  07C4  3001               	movlw	1
   414  07C5  00F2               	movwf	??_string
   415  07C6  0872               	movf	??_string,w
   416  07C7  07F4               	addwf	string@i,f
   417  07C8                     l671:
   418  07C8  0871               	movf	string@n,w
   419  07C9  0274               	subwf	string@i,w
   420  07CA  1C03               	skipc
   421  07CB  2FCD               	goto	u21
   422  07CC  2FCE               	goto	u20
   423  07CD                     u21:
   424  07CD  2FB7               	goto	l667
   425  07CE                     u20:
   426  07CE                     l20:
   427  07CE  0008               	return
   428  07CF                     __end_of_string:
   429                           
   430                           	psect	text2
   431  0791                     __ptext2:	
   432 ;; *************** function _store *****************
   433 ;; Defined at:
   434 ;;		line 15 in file "cod.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;  data            1    wreg     unsigned char 
   437 ;; Auto vars:     Size  Location     Type
   438 ;;  data            1    0[COMMON] unsigned char 
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      void 
   441 ;; Registers used:
   442 ;;		wreg
   443 ;; Tracked objects:
   444 ;;		On entry : 0/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   448 ;;      Params:         0       0       0       0       0
   449 ;;      Locals:         1       0       0       0       0
   450 ;;      Temps:          0       0       0       0       0
   451 ;;      Totals:         1       0       0       0       0
   452 ;;Total ram usage:        1 bytes
   453 ;; Hardware stack levels used: 1
   454 ;; This function calls:
   455 ;;		Nothing
   456 ;; This function is called by:
   457 ;;		_string
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461  0791                     _store:	
   462                           ;psect for function _store
   463                           
   464                           
   465                           ;incstack = 0
   466                           ; Regs used in _store: [wreg]
   467                           ;store@data stored from wreg
   468  0791  00F0               	movwf	store@data
   469  0792                     l623:
   470                           
   471                           ;cod.c: 15:     PORTDbits.RD1=0;;cod.c: 16:     PORTDbits.RD2=1;;cod.c: 17:     PORTDbit
      +                          s.RD2=0;
   472  0792  0870               	movf	store@data,w
   473  0793  1283               	bcf	3,5	;RP0=0, select bank0
   474  0794  1303               	bcf	3,6	;RP1=0, select bank0
   475  0795  0087               	movwf	7	;volatile
   476  0796                     l625:
   477                           
   478                           ;cod.c: 18: }
   479  0796  1408               	bsf	8,0	;volatile
   480  0797                     l627:
   481                           
   482                           ;cod.c: 19: void string (unsigned char *str, unsigned char n)
   483  0797  1088               	bcf	8,1	;volatile
   484  0798                     l629:
   485                           
   486                           ;cod.c: 20: {
   487  0798  1508               	bsf	8,2	;volatile
   488  0799                     l631:
   489                           
   490                           ;cod.c: 21:     unsigned char i;
   491  0799  1108               	bcf	8,2	;volatile
   492  079A                     l11:
   493  079A  0008               	return
   494  079B                     __end_of_store:
   495                           
   496                           	psect	text3
   497  079B                     __ptext3:	
   498 ;; *************** function _init *****************
   499 ;; Defined at:
   500 ;;		line 41 in file "cod.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;		None
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      void 
   507 ;; Registers used:
   508 ;;		wreg, status,2, status,0, pclath, cstack
   509 ;; Tracked objects:
   510 ;;		On entry : 0/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   514 ;;      Params:         0       0       0       0       0
   515 ;;      Locals:         0       0       0       0       0
   516 ;;      Temps:          0       0       0       0       0
   517 ;;      Totals:         0       0       0       0       0
   518 ;;Total ram usage:        0 bytes
   519 ;; Hardware stack levels used: 1
   520 ;; Hardware stack levels required when called: 1
   521 ;; This function calls:
   522 ;;		_instruct
   523 ;; This function is called by:
   524 ;;		_main
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528  079B                     _init:	
   529                           ;psect for function _init
   530                           
   531  079B                     l651:	
   532                           ;incstack = 0
   533                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
   534                           
   535                           
   536                           ;cod.c: 43:         instruct(0x80);
   537  079B  3038               	movlw	56
   538  079C  120A  118A  2787  120A  118A  	fcall	_instruct
   539                           
   540                           ;cod.c: 44:         string("Deepak Sai",10);
   541  07A1  3006               	movlw	6
   542  07A2  120A  118A  2787  120A  118A  	fcall	_instruct
   543                           
   544                           ;cod.c: 45:         instruct(0xC0);
   545  07A7  300C               	movlw	12
   546  07A8  120A  118A  2787  120A  118A  	fcall	_instruct
   547                           
   548                           ;cod.c: 46:         string("Pendyala",8);
   549  07AD  3001               	movlw	1
   550  07AE  120A  118A  2787  120A  118A  	fcall	_instruct
   551  07B3                     l23:
   552  07B3  0008               	return
   553  07B4                     __end_of_init:
   554                           
   555                           	psect	text4
   556  0787                     __ptext4:	
   557 ;; *************** function _instruct *****************
   558 ;; Defined at:
   559 ;;		line 23 in file "cod.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;  inst            1    wreg     unsigned char 
   562 ;; Auto vars:     Size  Location     Type
   563 ;;  inst            1    0[COMMON] unsigned char 
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		wreg
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   573 ;;      Params:         0       0       0       0       0
   574 ;;      Locals:         1       0       0       0       0
   575 ;;      Temps:          0       0       0       0       0
   576 ;;      Totals:         1       0       0       0       0
   577 ;;Total ram usage:        1 bytes
   578 ;; Hardware stack levels used: 1
   579 ;; This function calls:
   580 ;;		Nothing
   581 ;; This function is called by:
   582 ;;		_init
   583 ;;		_main
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587  0787                     _instruct:	
   588                           ;psect for function _instruct
   589                           
   590                           
   591                           ;incstack = 0
   592                           ; Regs used in _instruct: [wreg]
   593                           ;instruct@inst stored from wreg
   594  0787  00F0               	movwf	instruct@inst
   595  0788                     l633:
   596                           
   597                           ;cod.c: 23: ;cod.c: 24: for (i=0;i<n;i++);cod.c: 25:     {
   598  0788  0870               	movf	instruct@inst,w
   599  0789  1283               	bcf	3,5	;RP0=0, select bank0
   600  078A  1303               	bcf	3,6	;RP1=0, select bank0
   601  078B  0087               	movwf	7	;volatile
   602  078C                     l635:
   603                           
   604                           ;cod.c: 26:         store(str[i]);
   605  078C  1008               	bcf	8,0	;volatile
   606  078D                     l637:
   607                           
   608                           ;cod.c: 27:     }
   609  078D  1088               	bcf	8,1	;volatile
   610  078E                     l639:
   611                           
   612                           ;cod.c: 28: }
   613  078E  1508               	bsf	8,2	;volatile
   614  078F                     l641:
   615                           
   616                           ;cod.c: 29: void init()
   617  078F  1108               	bcf	8,2	;volatile
   618  0790                     l14:
   619  0790  0008               	return
   620  0791                     __end_of_instruct:
   621  007E                     btemp	set	126	;btemp
   622  007E                     wtemp0	set	126
   623                           
   624                           	psect	config
   625                           
   626                           ;Config register CONFIG @ 0x2007
   627                           ;	Oscillator Selection bits
   628                           ;	FOSC = HS, HS oscillator
   629                           ;	Watchdog Timer Enable bit
   630                           ;	WDTE = OFF, WDT disabled
   631                           ;	Power-up Timer Enable bit
   632                           ;	PWRTE = OFF, PWRT disabled
   633                           ;	Brown-out Reset Enable bit
   634                           ;	BOREN = OFF, BOR disabled
   635                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   636                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   637                           ;	Data EEPROM Memory Code Protection bit
   638                           ;	CPD = OFF, Data EEPROM code protection off
   639                           ;	Flash Program Memory Write Enable bits
   640                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   641                           ;	In-Circuit Debugger Mode bit
   642                           ;	DEBUG = 0x1, unprogrammed default
   643                           ;	Flash Program Memory Code Protection bit
   644                           ;	CP = OFF, Code protection off
   645  2007                     	org	8199
   646  2007  3FBA               	dw	16314

Data Sizes:
    Strings     20
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    string@str	PTR unsigned char  size(1) Largest target is 11
		 -> STR_2(CODE[9]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_string
    _string->_store
    _init->_instruct

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     353
                                              5 COMMON     1     1      0
                               _init
                           _instruct
                             _string
 ---------------------------------------------------------------------------------
 (1) _string                                               4     3      1     323
                                              1 COMMON     4     3      1
                              _store
 ---------------------------------------------------------------------------------
 (2) _store                                                1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0      15
                           _instruct
 ---------------------------------------------------------------------------------
 (1) _instruct                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _instruct
   _instruct
   _string
     _store

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Jul 21 16:04:58 2022

                      pc 0002                       l11 079A                       l20 07CE  
                     l14 0790                       l23 07B3                       u20 07CE  
                     u21 07CD                       fsr 0004                      l631 0799  
                    l623 0792                      l641 078F                      l633 0788  
                    l625 0796                      l635 078C                      l651 079B  
                    l627 0797                      l637 078D                      l629 0798  
                    l639 078E                      l671 07C8                      l665 07B5  
                    l681 07E8                      l673 07CF                      l667 07B7  
                    l683 07EE                      l675 07D3                      l669 07C4  
                    l677 07D8                      l679 07DE                      fsr0 0004  
                   STR_1 0009                     STR_2 0014                     _main 07CF  
                   _init 079B                     btemp 007E                     start 0000  
                  ?_main 0070                    ?_init 0070                    _PORTC 0007  
                  _TRISC 0087                    _TRISD 0088                    _store 0791  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC             __end_of_init 07B4  
                 ??_main 0075                   ??_init 0071                   ?_store 0070  
                 _string 07B4         __end_of_instruct 0791  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_store 079B                  ??_store 0070  
             __pmaintext 07CF                  ?_string 0071               __stringtab 0003  
              ?_instruct 0070                  __ptext1 07B4                  __ptext2 0791  
                __ptext3 079B                  __ptext4 0787     end_of_initialization 07FC  
             ??_instruct 0070                  string@i 0074                  string@n 0071  
              _PORTDbits 0008           __end_of_string 07CF      start_initialization 07FC  
               ??_string 0072                ___latbits 0002                __pstrings 0003  
           instruct@inst 0070              __stringbase 0008       __end_of__stringtab 0009  
               _instruct 0787                store@data 0070                string@str 0073  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
